{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","setmyStyle","_useState3","_useState4","btnText","setbtnText","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","border","Navbar","props","concat","mode","react_router_dom","to","title","aria-label","aria-current","aboutText","toggleMode","role","htmlFor","TextForm","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","text1","document","getElementById","select","navigator","clipboard","writeText","newtext","split","join","length","toPrecision","defaultProps","Alert","alert","word","lower","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","components_Alert","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.74b806c2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function About() {\r\n\tconst [myStyle, setmyStyle] = useState({\r\n\t\tcolor: 'black',\r\n\t\tbackgroundColor: 'white',\r\n\t});\r\n\tconst [btnText, setbtnText] = useState('Enable Dark Mode');\r\n\r\n\tconst toggleStyle = () => {\r\n\t\tif (myStyle.color === 'black') {\r\n\t\t\tsetmyStyle({\r\n\t\t\t\tcolor: 'white',\r\n\t\t\t\tbackgroundColor: 'black',\r\n\t\t\t\tborder: '1px solid white',\r\n\t\t\t});\r\n\t\t\tsetbtnText('Enable Light Mode');\r\n\t\t} else {\r\n\t\t\tsetmyStyle({\r\n\t\t\t\tcolor: 'black',\r\n\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t});\r\n\t\t\tsetbtnText('Enable Dark Mode');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='container' style={myStyle}>\r\n\t\t\t<h2 className='my-3'>About Us</h2>\r\n\t\t\t<div className='accordion' id='accordionExample'>\r\n\t\t\t\t<div className='accordion-item'>\r\n\t\t\t\t\t<h2 className='accordion-header' id='headingOne'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={myStyle}\r\n\t\t\t\t\t\t\tclassName='accordion-button'\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tdata-bs-toggle='collapse'\r\n\t\t\t\t\t\t\tdata-bs-target='#collapseOne'\r\n\t\t\t\t\t\t\taria-expanded='true'\r\n\t\t\t\t\t\t\taria-controls='collapseOne'>\r\n\t\t\t\t\t\t\tAccordion Item #1\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid='collapseOne'\r\n\t\t\t\t\t\tstyle={myStyle}\r\n\t\t\t\t\t\tclassName='accordion-collapse collapse show'\r\n\t\t\t\t\t\taria-labelledby='headingOne'\r\n\t\t\t\t\t\tdata-bs-parent='#accordionExample'>\r\n\t\t\t\t\t\t<div className='accordion-body'>\r\n\t\t\t\t\t\t\t<strong>This is the first item's accordion body.</strong> It is shown by default,\r\n\t\t\t\t\t\t\tuntil the collapse plugin adds the appropriate classes that we use to style each\r\n\t\t\t\t\t\t\telement. These classes control the overall appearance, as well as the showing and\r\n\t\t\t\t\t\t\thiding via CSS transitions. You can modify any of this with custom CSS or\r\n\t\t\t\t\t\t\toverriding our default variables. It's also worth noting that just about any HTML\r\n\t\t\t\t\t\t\tcan go within the <code>.accordion-body</code>, though the transition does limit\r\n\t\t\t\t\t\t\toverflow.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='accordion-item'>\r\n\t\t\t\t\t<h2 className='accordion-header' id='headingTwo'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={myStyle}\r\n\t\t\t\t\t\t\tclassName='accordion-button collapsed'\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tdata-bs-toggle='collapse'\r\n\t\t\t\t\t\t\tdata-bs-target='#collapseTwo'\r\n\t\t\t\t\t\t\taria-expanded='false'\r\n\t\t\t\t\t\t\taria-controls='collapseTwo'>\r\n\t\t\t\t\t\t\tAccordion Item #2\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={myStyle}\r\n\t\t\t\t\t\tid='collapseTwo'\r\n\t\t\t\t\t\tclassName='accordion-collapse collapse'\r\n\t\t\t\t\t\taria-labelledby='headingTwo'\r\n\t\t\t\t\t\tdata-bs-parent='#accordionExample'>\r\n\t\t\t\t\t\t<div className='accordion-body'>\r\n\t\t\t\t\t\t\t<strong>This is the second item's accordion body.</strong> It is hidden by\r\n\t\t\t\t\t\t\tdefault, until the collapse plugin adds the appropriate classes that we use to\r\n\t\t\t\t\t\t\tstyle each element. These classes control the overall appearance, as well as the\r\n\t\t\t\t\t\t\tshowing and hiding via CSS transitions. You can modify any of this with custom CSS\r\n\t\t\t\t\t\t\tor overriding our default variables. It's also worth noting that just about any\r\n\t\t\t\t\t\t\tHTML can go within the <code>.accordion-body</code>, though the transition does\r\n\t\t\t\t\t\t\tlimit overflow.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='accordion-item'>\r\n\t\t\t\t\t<h2 className='accordion-header' id='headingThree'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={myStyle}\r\n\t\t\t\t\t\t\tclassName='accordion-button collapsed'\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tdata-bs-toggle='collapse'\r\n\t\t\t\t\t\t\tdata-bs-target='#collapseThree'\r\n\t\t\t\t\t\t\taria-expanded='false'\r\n\t\t\t\t\t\t\taria-controls='collapseThree'>\r\n\t\t\t\t\t\t\tAccordion Item #3\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid='collapseThree'\r\n\t\t\t\t\t\tclassName='accordion-collapse collapse'\r\n\t\t\t\t\t\taria-labelledby='headingThree'\r\n\t\t\t\t\t\tdata-bs-parent='#accordionExample'\r\n\t\t\t\t\t\tstyle={myStyle}>\r\n\t\t\t\t\t\t<div className='accordion-body'>\r\n\t\t\t\t\t\t\t<strong>This is the third item's accordion body.</strong> It is hidden by default,\r\n\t\t\t\t\t\t\tuntil the collapse plugin adds the appropriate classes that we use to style each\r\n\t\t\t\t\t\t\telement. These classes control the overall appearance, as well as the showing and\r\n\t\t\t\t\t\t\thiding via CSS transitions. You can modify any of this with custom CSS or\r\n\t\t\t\t\t\t\toverriding our default variables. It's also worth noting that just about any HTML\r\n\t\t\t\t\t\t\tcan go within the <code>.accordion-body</code>, though the transition does limit\r\n\t\t\t\t\t\t\toverflow.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<button type='button' className='btn btn-primary my-3' onClick={toggleStyle}>\r\n\t\t\t\t\t{btnText}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<Link className='navbar-brand' to='#'>\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</Link>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='navbar-toggler'\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tdata-bs-toggle='collapse'\r\n\t\t\t\t\tdata-bs-target='#navbarSupportedContent'\r\n\t\t\t\t\taria-controls='navbarSupportedContent'\r\n\t\t\t\t\taria-expanded='false'\r\n\t\t\t\t\taria-label='Toggle navigation'>\r\n\t\t\t\t\t<span className='navbar-toggler-icon'></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n\t\t\t\t\t<ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t<Link className='nav-link' aria-current='page' to='/'>\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t<Link className='nav-link' to='/about'>\r\n\t\t\t\t\t\t\t\t{props.aboutText}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<form className='d-flex'>\r\n\t\t\t\t\t\t{/* <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button> */}\r\n\t\t\t\t\t\t<div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n\t\t\t\t\t\t\t<input className='form-check-input' onClick={props.toggleMode} type='checkbox' role='switch' id='flexSwitchCheckDefault' />\r\n\t\t\t\t\t\t\t<label className='form-check-label' htmlFor='flexSwitchCheckDefault'>\r\n\t\t\t\t\t\t\t\tEnable DarkMode\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nNavbar.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\taboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n\ttitle: 'Set Title Here',\r\n\taboutText: 'About TextUtils',\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\tconst handleUpClick = () => {\r\n\t\tlet newText = text.toUpperCase();\r\n\t\tsetText(newText);\r\n\t\tprops.showAlert('Converted to UpperCase', 'success');\r\n\t};\r\n\tconst handleLowClick = () => {\r\n\t\tlet newText = text.toLowerCase();\r\n\t\tsetText(newText);\r\n\t\tprops.showAlert('Converted to LowerCase', 'success');\r\n\t};\r\n\tconst handleClearClick = () => {\r\n\t\tlet newText = '';\r\n\t\tsetText(newText);\r\n\t\tprops.showAlert('Text Cleared', 'success');\r\n\t};\r\n\tconst handleCopyClick = () => {\r\n\t\tlet text1 = document.getElementById('myBox');\r\n\t\ttext1.select();\r\n\t\tnavigator.clipboard.writeText(text1.value);\r\n\t\tprops.showAlert('Copied to Clipboard!', 'success');\r\n\t};\r\n\tconst removeExtraSpace = () => {\r\n\t\tlet newtext = text.split(/[ ]+/);\r\n\t\tsetText(newtext.join(' '));\r\n\t};\r\n\tconst handleOnChange = (event) => {\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\r\n\tconst [text, setText] = useState('Enter text here');\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n\t\t\t\t<h1 className='mt-5'> {props.heading} </h1>\r\n\t\t\t\t<div className='mb-3'>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: props.mode === 'dark' ? 'grey' : 'white',\r\n\t\t\t\t\t\t\tcolor: props.mode === 'dark' ? 'white' : 'black',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tid='myBox'\r\n\t\t\t\t\t\trows='8'></textarea>\r\n\t\t\t\t\t<button className='btn btn-primary mt-3 me-2' onClick={handleUpClick}>\r\n\t\t\t\t\t\tConvert to Uppercase\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='btn btn-primary mt-3 me-2' onClick={handleLowClick}>\r\n\t\t\t\t\t\tConvert to Lowercase\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='btn btn-primary mt-3 me-2' onClick={handleClearClick}>\r\n\t\t\t\t\t\tClear Text\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='btn btn-primary mt-3 me-2' onClick={handleCopyClick}>\r\n\t\t\t\t\t\tCopy Text\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='btn btn-primary mt-3 me-2' onClick={removeExtraSpace}>\r\n\t\t\t\t\t\tRemove Extra Space\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='container my-3' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n\t\t\t\t<h2> Your Text Summary </h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tWord Count : <strong>{text.split(' ').length}</strong> words and <strong>{text.length}</strong> characters\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tReading Minutes : <strong>{0.005 * text.split(' ').length.toPrecision(2)}</strong> minutes\r\n\t\t\t\t</p>\r\n\t\t\t\t<h2> Preview </h2>\r\n\t\t\t\t<p> {text.length > 0 ? text : 'Enter Something in the textbox above to prevew it here!'} </p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n\tconst capitalize = (word) => {\r\n\t\tconst lower = word.toLowerCase();\r\n\t\treturn lower[0].toUpperCase() + lower.slice(1);\r\n\t};\r\n\treturn (\r\n\t\tprops.alert && (\r\n\t\t\t<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role='alert'>\r\n\t\t\t\t<strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n\t\t\t</div>\r\n\t\t)\r\n\t);\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n\nfunction App() {\n\tconst [mode, setMode] = useState('light');\n\tconst [alert, setAlert] = useState(null);\n\tconst showAlert = (message, type) => {\n\t\tsetAlert({\n\t\t\tmsg: message,\n\t\t\ttype: type,\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\tsetAlert(null);\n\t\t}, 1500);\n\t};\n\tconst toggleMode = () => {\n\t\tif (mode === 'light') {\n\t\t\tsetMode('dark');\n\t\t\tdocument.body.style.backgroundColor = 'grey';\n\t\t\tshowAlert('Dark mode has been enabled', 'success');\n\t\t\tdocument.title = 'TetxUtils - Dark Mode';\n\t\t\t// setInterval(() => {\n\t\t\t//   document.title = 'TetxUtil is amazing now';\n\t\t\t// }, 2000);\n\t\t\t// setInterval(() => {\n\t\t\t//   document.title = 'Download TetxUtils now';\n\t\t\t// }, 1000);\n\t\t} else {\n\t\t\tsetMode('light');\n\t\t\tdocument.body.style.backgroundColor = 'white';\n\t\t\tshowAlert('Light mode has been enabled', 'success');\n\t\t\tdocument.title = 'TetxUtils - Light Mode';\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Router>\n\t\t\t\t<Navbar title='TextUtils' mode={mode} toggleMode={toggleMode} aboutText='About Us' />\n\t\t\t\t<Alert alert={alert} />\n\t\t\t\t<div className='container my-3'>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route exact path='/' element={<TextForm showAlert={showAlert} heading='Enter the text to analyze below : ' mode={mode} />} />\n\t\t\t\t\t\t<Route exact path='/about' element={<About />} />\n\t\t\t\t\t</Routes>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}